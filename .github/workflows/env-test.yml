name: Environment Variable Test

on:
  push:
    branches: [ main, 'devin/**' ]
  pull_request:
    branches: [ main ]

jobs:
  env-test-hardcoded:
    runs-on: ubuntu-latest
    name: Test Environment Variables (Hardcoded)
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build:packages

      - name: Verify hardcoded environment variables
        env:
          OPENAI_API_KEY: sk-test-hardcoded-key-1234567890abcdef
          AI_GATEWAY_TOKEN: sk-test-hardcoded-gateway-token-abcdef1234567890
          AI_GATEWAY_URL: https://api.llm.do
          CI: true
          GITHUB_ACTIONS: true
        run: |
          echo "=== Environment Debug ==="
          echo "CI: $CI"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "OPENAI_API_KEY present: $([ -n "$OPENAI_API_KEY" ] && echo "true" || echo "false")"
          echo "AI_GATEWAY_TOKEN present: $([ -n "$AI_GATEWAY_TOKEN" ] && echo "true" || echo "false")"
          echo "AI_GATEWAY_URL present: $([ -n "$AI_GATEWAY_URL" ] && echo "true" || echo "false")"
          echo "OPENAI_API_KEY starts with: ${OPENAI_API_KEY:0:7}..."
          echo "AI_GATEWAY_TOKEN starts with: ${AI_GATEWAY_TOKEN:0:7}..."
          echo "AI_GATEWAY_URL: $AI_GATEWAY_URL"
          echo "=== Node.js Environment Verification ==="
          node -e "
            console.log('Node.js process.env verification:');
            console.log('- CI:', process.env.CI);
            console.log('- GITHUB_ACTIONS:', process.env.GITHUB_ACTIONS);
            console.log('- OPENAI_API_KEY present:', !!process.env.OPENAI_API_KEY);
            console.log('- AI_GATEWAY_TOKEN present:', !!process.env.AI_GATEWAY_TOKEN);
            console.log('- AI_GATEWAY_URL present:', !!process.env.AI_GATEWAY_URL);
            if (process.env.OPENAI_API_KEY) {
              console.log('- OPENAI_API_KEY starts with:', process.env.OPENAI_API_KEY.substring(0, 7) + '...');
            }
            if (process.env.AI_GATEWAY_TOKEN) {
              console.log('- AI_GATEWAY_TOKEN starts with:', process.env.AI_GATEWAY_TOKEN.substring(0, 7) + '...');
            }
            if (process.env.AI_GATEWAY_URL) {
              console.log('- AI_GATEWAY_URL:', process.env.AI_GATEWAY_URL);
            }
            console.log('Environment variable verification completed successfully');
          "

  env-test-secrets:
    runs-on: ubuntu-latest
    name: Test Environment Variables (Secrets)
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build:packages

      - name: Verify GitHub Actions secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AI_GATEWAY_TOKEN: ${{ secrets.AI_GATEWAY_TOKEN }}
          AI_GATEWAY_URL: ${{ secrets.AI_GATEWAY_URL }}
          CI: true
          GITHUB_ACTIONS: true
        run: |
          echo "=== Environment Debug ==="
          echo "CI: $CI"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "OPENAI_API_KEY present: $([ -n "$OPENAI_API_KEY" ] && echo "true" || echo "false")"
          echo "AI_GATEWAY_TOKEN present: $([ -n "$AI_GATEWAY_TOKEN" ] && echo "true" || echo "false")"
          echo "AI_GATEWAY_URL present: $([ -n "$AI_GATEWAY_URL" ] && echo "true" || echo "false")"
          if [ -n "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY starts with: ${OPENAI_API_KEY:0:7}..."
          fi
          if [ -n "$AI_GATEWAY_TOKEN" ]; then
            echo "AI_GATEWAY_TOKEN starts with: ${AI_GATEWAY_TOKEN:0:7}..."
          fi
          if [ -n "$AI_GATEWAY_URL" ]; then
            echo "AI_GATEWAY_URL: $AI_GATEWAY_URL"
          fi
          echo "=== Node.js Environment Verification ==="
          node -e "
            console.log('Node.js process.env verification:');
            console.log('- CI:', process.env.CI);
            console.log('- GITHUB_ACTIONS:', process.env.GITHUB_ACTIONS);
            console.log('- OPENAI_API_KEY present:', !!process.env.OPENAI_API_KEY);
            console.log('- AI_GATEWAY_TOKEN present:', !!process.env.AI_GATEWAY_TOKEN);
            console.log('- AI_GATEWAY_URL present:', !!process.env.AI_GATEWAY_URL);
            if (process.env.OPENAI_API_KEY) {
              console.log('- OPENAI_API_KEY starts with:', process.env.OPENAI_API_KEY.substring(0, 7) + '...');
            }
            if (process.env.AI_GATEWAY_TOKEN) {
              console.log('- AI_GATEWAY_TOKEN starts with:', process.env.AI_GATEWAY_TOKEN.substring(0, 7) + '...');
            }
            if (process.env.AI_GATEWAY_URL) {
              console.log('- AI_GATEWAY_URL:', process.env.AI_GATEWAY_URL);
            }
            console.log('GitHub Actions secrets verification completed successfully');
          "

  env-test-comparison:
    runs-on: ubuntu-latest
    name: Environment Variable Comparison Test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build:packages

      - name: Compare environment variable accessibility
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AI_GATEWAY_TOKEN: ${{ secrets.AI_GATEWAY_TOKEN }}
          AI_GATEWAY_URL: ${{ secrets.AI_GATEWAY_URL }}
          CI: true
          GITHUB_ACTIONS: true
        run: |
          echo "=== Shell Environment Check ==="
          echo "Shell environment variables:"
          echo "- CI: $CI"
          echo "- GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "- OPENAI_API_KEY present: $([ -n "$OPENAI_API_KEY" ] && echo "true" || echo "false")"
          echo "- AI_GATEWAY_TOKEN present: $([ -n "$AI_GATEWAY_TOKEN" ] && echo "true" || echo "false")"
          echo "- AI_GATEWAY_URL present: $([ -n "$AI_GATEWAY_URL" ] && echo "true" || echo "false")"
          
          echo "=== Node.js Environment Check ==="
          node -e "
            console.log('Node.js process.env variables:');
            console.log('- CI:', process.env.CI);
            console.log('- GITHUB_ACTIONS:', process.env.GITHUB_ACTIONS);
            console.log('- OPENAI_API_KEY present:', !!process.env.OPENAI_API_KEY);
            console.log('- AI_GATEWAY_TOKEN present:', !!process.env.AI_GATEWAY_TOKEN);
            console.log('- AI_GATEWAY_URL present:', !!process.env.AI_GATEWAY_URL);
            
            console.log('Environment variable comparison:');
            const shellVars = ['CI', 'GITHUB_ACTIONS', 'OPENAI_API_KEY', 'AI_GATEWAY_TOKEN', 'AI_GATEWAY_URL'];
            shellVars.forEach(varName => {
              const present = !!process.env[varName];
              console.log(\`- \${varName}: \${present ? 'ACCESSIBLE' : 'MISSING'}\`);
            });
            
            console.log('Environment variable accessibility test completed successfully');
          "
          
          echo "=== Test Setup Simulation ==="
          node -e "
            console.log('Simulating test setup environment loading...');
            
            try {
              console.log('Before dotenv import:');
              console.log('- OPENAI_API_KEY present:', !!process.env.OPENAI_API_KEY);
              console.log('- AI_GATEWAY_TOKEN present:', !!process.env.AI_GATEWAY_TOKEN);
              console.log('- AI_GATEWAY_URL present:', !!process.env.AI_GATEWAY_URL);
              
              console.log('Test setup simulation completed - environment variables remain accessible');
            } catch (error) {
              console.error('Error during test setup simulation:', error.message);
            }
          "
