name: Build

on:
  push:
    branches: ["**"]
  pull_request:

# Allow bot commits to trigger this workflow
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    # Explicitly run even if triggered by a bot
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9.15.1
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      # Debug step to verify lockfile presence
      - name: Check for lockfile
        id: check-lockfile
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "✅ pnpm-lock.yaml exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "❌ pnpm-lock.yaml is missing"
            echo "exists=false" >> $GITHUB_OUTPUT
            ls -la
          fi
          
      # Try frozen install first
      - name: Install with frozen lockfile
        id: frozen-install
        if: steps.check-lockfile.outputs.exists == 'true'
        run: pnpm install --frozen-lockfile
        continue-on-error: true
        
      # Fallback to regenerating lockfile if missing or frozen install fails
      - name: Regenerate lockfile and install
        if: steps.check-lockfile.outputs.exists == 'false' || steps.frozen-install.outcome == 'failure'
        run: |
          echo "🔧 Regenerating lockfile and installing dependencies"
          pnpm install --no-frozen-lockfile
          
      # Build step
      - run: pnpm run build

