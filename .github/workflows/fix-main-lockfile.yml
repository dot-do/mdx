name: üîí Fix lockfile conflicts on main

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'pnpm-lock.yaml'
  #     - 'package.json'
  #     - '**/package.json'
  # schedule:
  #   # Run daily at midnight UTC to ensure lockfile exists and is valid
  #   - cron: '0 0 * * *'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: write

jobs:
  fix-lockfile:
    runs-on: ubuntu-latest
    # Skip if this is a bot commit from the lockfile fix itself
    # if: ${{ !contains(github.event.head_commit.message, 'üîí') }}
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm CLI
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Check lockfile integrity
        id: lockfile-check
        run: |
          if [ ! -f pnpm-lock.yaml ]; then  
            echo "missing=true" >> $GITHUB_OUTPUT
            echo "‚ùå pnpm-lock.yaml is missing"
          elif pnpm install --frozen-lockfile &>/dev/null; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "‚úÖ pnpm-lock.yaml is valid"
          else
            echo "corrupted=true" >> $GITHUB_OUTPUT
            echo "üîß pnpm-lock.yaml is corrupted or has conflicts"
          fi
          
          # Always output the status for debugging
          echo "Lockfile status:"
          echo "- Missing: ${missing:-false}"
          echo "- Valid: ${valid:-false}"
          echo "- Corrupted: ${corrupted:-false}"

      - name: Regenerate corrupted lockfile
        if: steps.lockfile-check.outputs.missing == 'true' || steps.lockfile-check.outputs.corrupted == 'true'
        run: |
          echo "üîß Regenerating pnpm-lock.yaml from scratch"
          rm -f pnpm-lock.yaml
          
          # Try to regenerate the lockfile with increased verbosity for better debugging
          echo "Running pnpm install to regenerate lockfile..."
          pnpm install --no-frozen-lockfile || {
            echo "::error::Failed to regenerate lockfile with standard install"
            echo "Trying with more verbose output..."
            pnpm install --no-frozen-lockfile --loglevel=debug
          }
          
          # Verify the lockfile was created successfully
          if [ ! -f pnpm-lock.yaml ]; then
            echo "::error::Failed to generate pnpm-lock.yaml"
            exit 1
          fi
          
          # Commit the fixed lockfile
          echo "‚úèÔ∏è Committing fixed pnpm-lock.yaml"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pnpm-lock.yaml
          
          # Create a more descriptive commit message
          if [ "${{ steps.lockfile-check.outputs.missing }}" == "true" ]; then
            git commit -m "üîí fix: regenerate missing pnpm-lock.yaml on main branch"
          else
            git commit -m "üîí fix: resolve conflicts in pnpm-lock.yaml on main branch"
          fi
          
          # Push changes
          echo "Pushing changes to main branch..."
          git push
